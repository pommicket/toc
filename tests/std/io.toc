putchar ::= #foreign("putchar", "libc.so.6") fn(#C int) #C int;
toc_putchar ::= fn(x: char) {
	putchar(x as #C int);
}
printf ::= #foreign("printf", "libc.so.6") fn(#C &"char const", #C ..) #C int; 

writes ::= fn(x: []char) {
	printf_strfmt := "%s\0";
	printf(&printf_strfmt[0], &x[0]);
}

puts ::= fn(x: []char) {
	writes(x);
	toc_putchar('\n');
}

writei ::= fn(x: int) {
	if x < 0 {
	   toc_putchar('-');
	   // NOTE: don't do x = -x; here to make sure I64_MIN works
	}
	if x == 0 {
		toc_putchar('0');
	} else {
		abs ::= fn(x: int) int { if x < 0 { -x } else { x } };
		scan_digit := 1000000000000000000;
		started := false;
		while scan_digit > 0 {
			digit := abs((x / scan_digit) % 10);
			if digit > 0 { started = true; }
			if started {
			   toc_putchar((('0' as int) + digit) as char);
			}
			scan_digit /= 10;
		}
	}
}

puti ::= fn(x: int) {
	writei(x);
	toc_putchar('\n');
}

